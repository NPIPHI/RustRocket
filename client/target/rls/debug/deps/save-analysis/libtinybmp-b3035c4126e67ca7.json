{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1","program":"C:\\Users\\Roger\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tinybmp","--edition=2018","C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b3035c4126e67ca7","-C","extra-filename=-b3035c4126e67ca7","--out-dir","c:\\Users\\Roger\\Desktop\\RustRocket\\client\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Roger\\Desktop\\RustRocket\\client\\target\\rls\\debug\\deps","--extern","embedded_graphics=c:\\Users\\Roger\\Desktop\\RustRocket\\client\\target\\rls\\debug\\deps\\libembedded_graphics-3cf17ef52ae2b15b.rmeta","--extern","nom=c:\\Users\\Roger\\Desktop\\RustRocket\\client\\target\\rls\\debug\\deps\\libnom-f13fe9b7ac74aa5d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Roger\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Roger\\Desktop\\RustRocket\\client\\target\\rls\\debug\\deps\\libtinybmp-b3035c4126e67ca7.rmeta"},"prelude":{"crate_id":{"name":"tinybmp","disambiguator":[2114191294516901729,0]},"crate_root":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11165144592143370822,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[252041924521724887,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5467317383579905353,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":4,"id":{"name":"embedded_graphics","disambiguator":[11395252172561255285,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":5,"id":{"name":"embedded_graphics_core","disambiguator":[7519933837591493600,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":6,"id":{"name":"az","disambiguator":[10602453954428482810,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":7,"id":{"name":"micromath","disambiguator":[316398108868415869,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":8,"id":{"name":"float_cmp","disambiguator":[15642108811296625291,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":9,"id":{"name":"num_traits","disambiguator":[11822369622602155861,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":10,"id":{"name":"std","disambiguator":[7976927198175868373,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":11,"id":{"name":"alloc","disambiguator":[7624884120048857693,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":12,"id":{"name":"libc","disambiguator":[11703982264691436790,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":13,"id":{"name":"unwind","disambiguator":[2970152443746782806,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":14,"id":{"name":"cfg_if","disambiguator":[9222488229097456044,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":15,"id":{"name":"hashbrown","disambiguator":[7853498759631503325,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":16,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16147963203778103955,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[14622278557065309757,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":18,"id":{"name":"std_detect","disambiguator":[12620427935833221912,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5227252993197737239,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","num":20,"id":{"name":"byteorder","disambiguator":[14609652097447164130,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","num":21,"id":{"name":"nom","disambiguator":[10023975219644596396,0]}},{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","num":22,"id":{"name":"memchr","disambiguator":[14182144345015993516,0]}}],"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":7873,"line_start":1,"line_end":228,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4725,"byte_end":4735,"line_start":123,"line_end":123,"column_start":18,"column_end":28},"alias_span":null,"name":"DynamicBmp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4750,"byte_end":4753,"line_start":124,"line_end":124,"column_start":14,"column_end":17},"alias_span":null,"name":"Bpp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4755,"byte_end":4767,"line_start":124,"line_end":124,"column_start":19,"column_end":31},"alias_span":null,"name":"ChannelMasks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4769,"byte_end":4775,"line_start":124,"line_end":124,"column_start":33,"column_end":39},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4777,"byte_end":4785,"line_start":124,"line_end":124,"column_start":41,"column_end":49},"alias_span":null,"name":"RowOrder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4800,"byte_end":4806,"line_start":125,"line_end":125,"column_start":13,"column_end":19},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4821,"byte_end":4827,"line_start":126,"line_end":126,"column_start":14,"column_end":20},"alias_span":null,"name":"RawBmp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4846,"byte_end":4854,"line_start":127,"line_end":127,"column_start":18,"column_end":26},"alias_span":null,"name":"RawPixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4856,"byte_end":4865,"line_start":127,"line_end":127,"column_start":28,"column_end":37},"alias_span":null,"name":"RawPixels","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":7873,"line_start":1,"line_end":228,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":58},{"krate":0,"index":95},{"krate":0,"index":113},{"krate":0,"index":150},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":618},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":631},{"krate":0,"index":216},{"krate":0,"index":223},{"krate":0,"index":230},{"krate":0,"index":635},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662}],"decl_id":null,"docs":" A small BMP parser designed for embedded, no-std environments but usable anywhere. Beyond\n parsing the image header, no other allocations are made.","sig":null,"attributes":[{"value":"/ A small BMP parser designed for embedded, no-std environments but usable anywhere. Beyond","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":93,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ parsing the image header, no other allocations are made.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":94,"byte_end":154,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":155,"byte_end":158,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ To use `tinybmp` without [`embedded-graphics`] the raw data for individual pixels in an image","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":159,"byte_end":256,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ can be accessed using the methods provided by the [`RawBmp`] struct.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":257,"byte_end":329,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":330,"byte_end":333,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":334,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":349,"byte_end":352,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Using `Bmp` to draw a BMP image","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":353,"byte_end":391,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":392,"byte_end":395,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If the color format inside the BMP file is known at compile time the [`Bmp`] type can be used","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":396,"byte_end":493,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ to draw an image to an [`embedded-graphics`] draw target. The BMP file used in this example","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":494,"byte_end":589,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ uses 16 bits per pixel with a RGB565 format.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":590,"byte_end":638,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":639,"byte_end":642,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":643,"byte_end":654,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> Result<(), core::convert::Infallible> {","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":655,"byte_end":713,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ use embedded_graphics::{image::Image, prelude::*};","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":714,"byte_end":768,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ use tinybmp::Bmp;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":769,"byte_end":790,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/ # use embedded_graphics::mock_display::MockDisplay;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":791,"byte_end":846,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/ # use embedded_graphics::pixelcolor::Rgb565;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":847,"byte_end":895,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/ # let mut display: MockDisplay<Rgb565> = MockDisplay::default();","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":896,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":965,"byte_end":968,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let bmp_data = include_bytes!(\"../tests/chessboard-8px-color-16bit.bmp\");","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":969,"byte_end":1046,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1047,"byte_end":1050,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Load 16 BPP 8x8px image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1051,"byte_end":1082,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ // Note: The color type is specified explicitly to match the format used by the BMP image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1083,"byte_end":1177,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/ let bmp = Bmp::<Rgb565>::from_slice(bmp_data).unwrap();","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1178,"byte_end":1237,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1238,"byte_end":1241,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Draw the image with the top left corner at (10, 20) by wrapping it in","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1242,"byte_end":1318,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ // an embedded-graphics `Image`.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1319,"byte_end":1355,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ Image::new(&bmp, Point::new(10, 20)).draw(&mut display)?;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1356,"byte_end":1417,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ # Ok::<(), core::convert::Infallible>(()) }","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1418,"byte_end":1465,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1466,"byte_end":1473,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1474,"byte_end":1477,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Using `DynamicBmp` to draw a BMP image","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1478,"byte_end":1523,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1524,"byte_end":1527,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If the exact color format used in the BMP file isn't known at compile time, for example to read","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1528,"byte_end":1627,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ user supplied images, the [`DynamicBmp`] can be used. Because automatic color conversion will","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1628,"byte_end":1725,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ be used the drawing performance might be degraded in comparison to [`Bmp`].","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1726,"byte_end":1805,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1806,"byte_end":1809,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1810,"byte_end":1821,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> Result<(), core::convert::Infallible> {","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1822,"byte_end":1880,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ use embedded_graphics::{image::Image, prelude::*};","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1881,"byte_end":1935,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ use tinybmp::DynamicBmp;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1936,"byte_end":1964,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ # use embedded_graphics::mock_display::MockDisplay;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":1965,"byte_end":2020,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ # use embedded_graphics::pixelcolor::Rgb565;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2021,"byte_end":2069,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ # let mut display: MockDisplay<Rgb565> = MockDisplay::default();","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2070,"byte_end":2138,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2139,"byte_end":2142,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let bmp_data = include_bytes!(\"../tests/chessboard-8px-color-16bit.bmp\");","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2143,"byte_end":2220,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2221,"byte_end":2224,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Load BMP image with unknown color format.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2225,"byte_end":2273,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ // Note: There is no need to explicitly specify the color type.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2274,"byte_end":2341,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ let bmp = DynamicBmp::from_slice(bmp_data).unwrap();","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2342,"byte_end":2398,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2399,"byte_end":2402,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Draw the image with the top left corner at (10, 20) by wrapping it in","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2403,"byte_end":2479,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ // an embedded-graphics `Image`.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2480,"byte_end":2516,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/ Image::new(&bmp, Point::new(10, 20)).draw(&mut display)?;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2517,"byte_end":2578,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ # Ok::<(), core::convert::Infallible>(()) }","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2579,"byte_end":2626,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2627,"byte_end":2634,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the raw image data","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2639,"byte_end":2674,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2675,"byte_end":2678,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The [`RawBmp`] struct provides methods to access lower level information about a BMP file,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2679,"byte_end":2773,"line_start":63,"line_end":63,"column_start":1,"column_end":95}},{"value":"/ like the BMP header or the raw image data. An instance of this type can be created by using","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2774,"byte_end":2869,"line_start":64,"line_end":64,"column_start":1,"column_end":96}},{"value":"/ [`from_slice`] or by accessing the underlying raw object of a [`Bmp`] or [`DynamicBmp`] object","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2870,"byte_end":2968,"line_start":65,"line_end":65,"column_start":1,"column_end":99}},{"value":"/ by using [`as_raw`].","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2969,"byte_end":2993,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2994,"byte_end":2997,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":2998,"byte_end":3009,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ use embedded_graphics::prelude::*;","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3010,"byte_end":3048,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ use tinybmp::{RawBmp, Bpp, Header, RawPixel, RowOrder};","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3049,"byte_end":3108,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3109,"byte_end":3112,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let bmp = RawBmp::from_slice(include_bytes!(\"../tests/chessboard-8px-24bit.bmp\"))","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3113,"byte_end":3198,"line_start":72,"line_end":72,"column_start":1,"column_end":86}},{"value":"/     .expect(\"Failed to parse BMP image\");","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3199,"byte_end":3244,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3245,"byte_end":3248,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // Read the BMP header","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3249,"byte_end":3275,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3276,"byte_end":3291,"line_start":76,"line_end":76,"column_start":1,"column_end":16}},{"value":"/     bmp.header(),","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3292,"byte_end":3313,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     &Header {","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3314,"byte_end":3331,"line_start":78,"line_end":78,"column_start":1,"column_end":18}},{"value":"/         file_size: 314,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3332,"byte_end":3359,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/         image_data_start: 122,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3360,"byte_end":3394,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/         bpp: Bpp::Bits24,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3395,"byte_end":3424,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/         image_size: Size::new(8, 8),","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3425,"byte_end":3465,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/         image_data_len: 192,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3466,"byte_end":3498,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/         channel_masks: None,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3499,"byte_end":3531,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/         row_order: RowOrder::BottomUp","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3532,"byte_end":3573,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3574,"byte_end":3583,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3584,"byte_end":3590,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3591,"byte_end":3594,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Check that raw image data slice is the correct length (according to parsed header)","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3595,"byte_end":3684,"line_start":89,"line_end":89,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(bmp.image_data().len(), bmp.header().image_data_len as usize);","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3685,"byte_end":3762,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3763,"byte_end":3766,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ // Get an iterator over the pixel coordinates and values in this image and load into a vec","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3767,"byte_end":3861,"line_start":92,"line_end":92,"column_start":1,"column_end":95}},{"value":"/ let pixels: Vec<RawPixel> = bmp.pixels().collect();","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3862,"byte_end":3917,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3918,"byte_end":3921,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // Loaded example image is 8x8px","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3922,"byte_end":3958,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(pixels.len(), 8 * 8);","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3959,"byte_end":3995,"line_start":96,"line_end":96,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":3996,"byte_end":4003,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4004,"byte_end":4007,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`embedded-graphics`]: https://crates.io/crates/embedded-graphics","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4008,"byte_end":4077,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/ [`Header`]: ./header/struct.Header.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4078,"byte_end":4121,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/ [`Bmp`]: ./struct.Bmp.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4122,"byte_end":4152,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ [`as_raw`]: ./struct.Bmp.html#method.as_raw","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4153,"byte_end":4200,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/ [`DynamicBmp`]: ./struct.DynamicBmp.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4201,"byte_end":4245,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ [`RawBmp`]: ./struct.RawBmp.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4246,"byte_end":4282,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/ [`from_slice`]: ./struct.RawBmp.html#method.from_slice","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4283,"byte_end":4341,"line_start":105,"line_end":105,"column_start":1,"column_end":59}},{"value":"/ [`pixels`]: ./struct.RawBmp.html#method.pixels","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4342,"byte_end":4392,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/ [`image_data`]: ./struct.RawBmp.html#method.image_data","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4393,"byte_end":4451,"line_start":107,"line_end":107,"column_start":1,"column_end":59}},{"value":"no_std","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4453,"byte_end":4463,"line_start":109,"line_end":109,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4464,"byte_end":4486,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4487,"byte_end":4526,"line_start":111,"line_end":111,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8724,"byte_end":8734,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"DynamicBmp","qualname":"::dynamic_bmp::DynamicBmp","value":"DynamicBmp {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" Dynamic BMP image.","sig":null,"attributes":[{"value":"/ Dynamic BMP image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8126,"byte_end":8148,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8149,"byte_end":8152,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `DynamicBmp` is used to draw images that don't have a known color type at compile time,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8153,"byte_end":8244,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ for example user supplied images. If the color type is known at compile time consider using","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8245,"byte_end":8340,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ [`Bmp`] for improved performance.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8341,"byte_end":8378,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8379,"byte_end":8382,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `DynamicBmp` works for all embedded-graphics draw targets that use a color type that implements","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8383,"byte_end":8482,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ `From` for `Rgb555, `Rgb565`, `Rgb888` and `Gray8`, like every `Rgb...` and `Bgr...` type","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8483,"byte_end":8576,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/ included in embedded-graphics.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8577,"byte_end":8611,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8612,"byte_end":8615,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Bmp`]: struct.Bmp.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8616,"byte_end":8644,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":9016,"byte_end":9026,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<DynamicBmp>::from_slice","value":"pub fn from_slice(&'a [u8]) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a bitmap object from a byte slice.\n","sig":null,"attributes":[{"value":"/ Creates a bitmap object from a byte slice.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8958,"byte_end":9004,"line_start":36,"line_end":36,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10836,"byte_end":10842,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<DynamicBmp>::as_raw","value":"pub fn as_raw(&Self) -> &RawBmp","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the raw BMP image.","sig":null,"attributes":[{"value":"/ Returns a reference to the raw BMP image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10626,"byte_end":10671,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10676,"byte_end":10679,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The [`RawBmp`] instance can be used to access lower level information about the BMP file.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10684,"byte_end":10777,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10782,"byte_end":10785,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`RawBmp`]: struct.RawBmp.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10790,"byte_end":10824,"line_start":82,"line_end":82,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12572,"byte_end":12577,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Bits1","qualname":"::header::Bpp::Bits1","value":"Bpp::Bits1","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" 1 bit per pixel.\n","sig":null,"attributes":[{"value":"/ 1 bit per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12547,"byte_end":12567,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12609,"byte_end":12614,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Bits8","qualname":"::header::Bpp::Bits8","value":"Bpp::Bits8","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" 8 bits per pixel.\n","sig":null,"attributes":[{"value":"/ 8 bits per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12583,"byte_end":12604,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12647,"byte_end":12653,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Bits16","qualname":"::header::Bpp::Bits16","value":"Bpp::Bits16","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" 16 bits per pixel.\n","sig":null,"attributes":[{"value":"/ 16 bits per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12620,"byte_end":12642,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12686,"byte_end":12692,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Bits24","qualname":"::header::Bpp::Bits24","value":"Bpp::Bits24","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" 24 bits per pixel.\n","sig":null,"attributes":[{"value":"/ 24 bits per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12659,"byte_end":12681,"line_start":24,"line_end":24,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12725,"byte_end":12731,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Bits32","qualname":"::header::Bpp::Bits32","value":"Bpp::Bits32","parent":{"krate":0,"index":305},"children":[],"decl_id":null,"docs":" 32 bits per pixel.\n","sig":null,"attributes":[{"value":"/ 32 bits per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12698,"byte_end":12720,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12537,"byte_end":12540,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Bpp","qualname":"::header::Bpp","value":"pub enum Bpp { Bits1, Bits8, Bits16, Bits24, Bits32, }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"decl_id":null,"docs":" Bits per pixel.\n","sig":null,"attributes":[{"value":"/ Bits per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12422,"byte_end":12441,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12510,"byte_end":12527,"line_start":16,"line_end":16,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12895,"byte_end":12903,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"BottomUp","qualname":"::header::RowOrder::BottomUp","value":"RowOrder::BottomUp","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Bottom-up (standard)\n","sig":null,"attributes":[{"value":"/ Bottom-up (standard)","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12866,"byte_end":12890,"line_start":34,"line_end":34,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12926,"byte_end":12933,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"TopDown","qualname":"::header::RowOrder::TopDown","value":"RowOrder::TopDown","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Top-down\n","sig":null,"attributes":[{"value":"/ Top-down","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12909,"byte_end":12921,"line_start":36,"line_end":36,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12851,"byte_end":12859,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"RowOrder","qualname":"::header::RowOrder","value":"pub enum RowOrder { BottomUp, TopDown, }","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":337}],"decl_id":null,"docs":" Image row order\n","sig":null,"attributes":[{"value":"/ Image row order","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12736,"byte_end":12755,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12824,"byte_end":12841,"line_start":32,"line_end":32,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13456,"byte_end":13460,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"bits","qualname":"<Bpp>::bits","value":"pub fn bits(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of bits.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13413,"byte_end":13444,"line_start":62,"line_end":62,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13778,"byte_end":13784,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"Header","qualname":"::header::Header","value":"Header { file_size, image_data_start, image_size, bpp, image_data_len, channel_masks, row_order }","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"decl_id":null,"docs":" BMP header information\n","sig":null,"attributes":[{"value":"/ BMP header information","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13672,"byte_end":13698,"line_start":74,"line_end":74,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13829,"byte_end":13838,"line_start":78,"line_end":78,"column_start":9,"column_end":18},"name":"file_size","qualname":"::header::Header::file_size","value":"u32","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Total file size in bytes.\n","sig":null,"attributes":[{"value":"/ Total file size in bytes.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13791,"byte_end":13820,"line_start":77,"line_end":77,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13925,"byte_end":13941,"line_start":81,"line_end":81,"column_start":9,"column_end":25},"name":"image_data_start","qualname":"::header::Header::image_data_start","value":"usize","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Byte offset from beginning of file at which pixel data begins.\n","sig":null,"attributes":[{"value":"/ Byte offset from beginning of file at which pixel data begins.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13850,"byte_end":13916,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13989,"byte_end":13999,"line_start":84,"line_end":84,"column_start":9,"column_end":19},"name":"image_size","qualname":"::header::Header::image_size","value":"embedded_graphics::geometry::Size","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Image size in pixels.\n","sig":null,"attributes":[{"value":"/ Image size in pixels.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13955,"byte_end":13980,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14050,"byte_end":14053,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"bpp","qualname":"::header::Header::bpp","value":"header::Bpp","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Number of bits per pixel.\n","sig":null,"attributes":[{"value":"/ Number of bits per pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14012,"byte_end":14041,"line_start":86,"line_end":86,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14112,"byte_end":14126,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"name":"image_data_len","qualname":"::header::Header::image_data_len","value":"u32","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Length in bytes of the image data.\n","sig":null,"attributes":[{"value":"/ Length in bytes of the image data.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14065,"byte_end":14103,"line_start":89,"line_end":89,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14184,"byte_end":14197,"line_start":93,"line_end":93,"column_start":9,"column_end":22},"name":"channel_masks","qualname":"::header::Header::channel_masks","value":"core::option::Option<header::ChannelMasks>","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Bit masks for the color channels.\n","sig":null,"attributes":[{"value":"/ Bit masks for the color channels.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14138,"byte_end":14175,"line_start":92,"line_end":92,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14282,"byte_end":14291,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"row_order","qualname":"::header::Header::row_order","value":"header::RowOrder","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":" Row order of the image data within the file\n","sig":null,"attributes":[{"value":"/ Row order of the image data within the file","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14226,"byte_end":14273,"line_start":95,"line_end":95,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":16891,"byte_end":16903,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"ChannelMasks","qualname":"::header::ChannelMasks","value":"ChannelMasks { red, green, blue, alpha }","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"decl_id":null,"docs":" Masks for the color channels.\n","sig":null,"attributes":[{"value":"/ Masks for the color channels.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":16769,"byte_end":16802,"line_start":165,"line_end":165,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":16940,"byte_end":16943,"line_start":169,"line_end":169,"column_start":9,"column_end":12},"name":"red","qualname":"::header::ChannelMasks::red","value":"u32","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Red channel mask.\n","sig":null,"attributes":[{"value":"/ Red channel mask.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":16910,"byte_end":16931,"line_start":168,"line_end":168,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":16986,"byte_end":16991,"line_start":171,"line_end":171,"column_start":9,"column_end":14},"name":"green","qualname":"::header::ChannelMasks::green","value":"u32","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Green channel mask.\n","sig":null,"attributes":[{"value":"/ Green channel mask.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":16954,"byte_end":16977,"line_start":170,"line_end":170,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17033,"byte_end":17037,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"name":"blue","qualname":"::header::ChannelMasks::blue","value":"u32","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Blue channel mask.\n","sig":null,"attributes":[{"value":"/ Blue channel mask.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17002,"byte_end":17024,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17080,"byte_end":17085,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"name":"alpha","qualname":"::header::ChannelMasks::alpha","value":"u32","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Alpha channel mask.\n","sig":null,"attributes":[{"value":"/ Alpha channel mask.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17048,"byte_end":17071,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17157,"byte_end":17163,"line_start":180,"line_end":180,"column_start":15,"column_end":21},"name":"RGB555","qualname":"::header::ChannelMasks::RGB555","value":"Self","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Rgb555 color masks.\n","sig":null,"attributes":[{"value":"/ Rgb555 color masks.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17119,"byte_end":17142,"line_start":179,"line_end":179,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17352,"byte_end":17358,"line_start":188,"line_end":188,"column_start":15,"column_end":21},"name":"RGB565","qualname":"::header::ChannelMasks::RGB565","value":"Self","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Rgb565 color masks.\n","sig":null,"attributes":[{"value":"/ Rgb565 color masks.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17314,"byte_end":17337,"line_start":187,"line_end":187,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17550,"byte_end":17556,"line_start":196,"line_end":196,"column_start":15,"column_end":21},"name":"RGB888","qualname":"::header::ChannelMasks::RGB888","value":"Self","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Rgb888 color masks.\n","sig":null,"attributes":[{"value":"/ Rgb888 color masks.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17512,"byte_end":17535,"line_start":195,"line_end":195,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18449,"byte_end":18455,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::pixels::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" Iterator over the pixels in a BMP image.","sig":null,"attributes":[{"value":"/ Iterator over the pixels in a BMP image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18205,"byte_end":18249,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18250,"byte_end":18253,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [`pixels`] method documentation for more information.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18254,"byte_end":18319,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18320,"byte_end":18323,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`pixels`]: struct.Bmp.html#method.pixels","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18324,"byte_end":18369,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19275,"byte_end":19281,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"RawBmp","qualname":"::raw_bmp::RawBmp","value":"RawBmp {  }","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"decl_id":null,"docs":" A BMP-format bitmap.\n","sig":null,"attributes":[{"value":"/ A BMP-format bitmap.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19171,"byte_end":19195,"line_start":10,"line_end":10,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19910,"byte_end":19920,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<RawBmp>::from_slice","value":"pub fn from_slice(&'a [u8]) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Create a bitmap object from a byte slice.","sig":null,"attributes":[{"value":"/ Create a bitmap object from a byte slice.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19406,"byte_end":19451,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19456,"byte_end":19459,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The created object keeps a shared reference to the input and does not dynamically allocate","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19464,"byte_end":19558,"line_start":23,"line_end":23,"column_start":5,"column_end":99}},{"value":"/ memory.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19563,"byte_end":19574,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19579,"byte_end":19582,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ In contrast to the [`from_slice`] constructor no color type needs to be specified when","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19587,"byte_end":19677,"line_start":26,"line_end":26,"column_start":5,"column_end":95}},{"value":"/ calling this method. This will disable all functions that requires a specified color type,","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19682,"byte_end":19776,"line_start":27,"line_end":27,"column_start":5,"column_end":99}},{"value":"/ like the [`pixels`] method.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19781,"byte_end":19812,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19817,"byte_end":19820,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`from_slice`]: #method.from_slice","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19825,"byte_end":19863,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ [`pixels`]: #method.pixels","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19868,"byte_end":19898,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20228,"byte_end":20232,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"size","qualname":"<RawBmp>::size","value":"pub fn size(&Self) -> Size","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of this image in pixels.\n","sig":null,"attributes":[{"value":"/ Returns the size of this image in pixels.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20171,"byte_end":20216,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20356,"byte_end":20365,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"color_bpp","qualname":"<RawBmp>::color_bpp","value":"pub fn color_bpp(&Self) -> Bpp","parent":null,"children":[],"decl_id":null,"docs":" Returns the BPP (bits per pixel) for this image.\n","sig":null,"attributes":[{"value":"/ Returns the BPP (bits per pixel) for this image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20292,"byte_end":20344,"line_start":45,"line_end":45,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20479,"byte_end":20489,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"image_data","qualname":"<RawBmp>::image_data","value":"pub fn image_data(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the raw image data.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the raw image data.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20417,"byte_end":20467,"line_start":50,"line_end":50,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20600,"byte_end":20606,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"header","qualname":"<RawBmp>::header","value":"pub fn header(&Self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the BMP header.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the BMP header.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20546,"byte_end":20588,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20950,"byte_end":20956,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"pixels","qualname":"<RawBmp>::pixels","value":"pub fn pixels<'b>(&'b Self) -> RawPixels","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the raw pixels in the image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the raw pixels in the image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20659,"byte_end":20716,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20721,"byte_end":20724,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The iterator returns the raw pixel colors as `u32` values. To automatically convert the raw","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20729,"byte_end":20824,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ values into the color specified by `C` use [`pixels`] instead.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20829,"byte_end":20895,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20900,"byte_end":20903,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`pixels`]: #method.pixels","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":20908,"byte_end":20938,"line_start":65,"line_end":65,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":22017,"byte_end":22026,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"RawPixels","qualname":"::raw_pixels::RawPixels","value":"RawPixels {  }","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"decl_id":null,"docs":" Iterator over individual BMP pixels.","sig":null,"attributes":[{"value":"/ Iterator over individual BMP pixels.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":21806,"byte_end":21846,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":21847,"byte_end":21850,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each pixel is returned as a `u32` regardless of the bit depth of the source image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":21851,"byte_end":21937,"line_start":10,"line_end":10,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24699,"byte_end":24707,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"RawPixel","qualname":"::raw_pixels::RawPixel","value":"RawPixel { position, color }","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"decl_id":null,"docs":" Pixel with raw pixel color stored as a `u32`.\n","sig":null,"attributes":[{"value":"/ Pixel with raw pixel color stored as a `u32`.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24561,"byte_end":24610,"line_start":97,"line_end":97,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24785,"byte_end":24793,"line_start":101,"line_end":101,"column_start":9,"column_end":17},"name":"position","qualname":"::raw_pixels::RawPixel::position","value":"embedded_graphics::geometry::Point","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" The position relative to the top left corner of the image.\n","sig":null,"attributes":[{"value":"/ The position relative to the top left corner of the image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24714,"byte_end":24776,"line_start":100,"line_end":100,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24840,"byte_end":24845,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"name":"color","qualname":"::raw_pixels::RawPixel::color","value":"u32","parent":{"krate":0,"index":567},"children":[],"decl_id":null,"docs":" The raw pixel color.\n","sig":null,"attributes":[{"value":"/ The raw pixel color.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24807,"byte_end":24831,"line_start":103,"line_end":103,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24915,"byte_end":24918,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<RawPixel>::new","value":"pub fn new(Point, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new raw pixel.\n","sig":null,"attributes":[{"value":"/ Creates a new raw pixel.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24875,"byte_end":24903,"line_start":108,"line_end":108,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4975,"byte_end":4978,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"Bmp","qualname":"::Bmp","value":"Bmp {  }","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"decl_id":null,"docs":" A BMP-format bitmap\n","sig":null,"attributes":[{"value":"/ A BMP-format bitmap","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":4872,"byte_end":4895,"line_start":130,"line_end":130,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5541,"byte_end":5551,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Bmp>::from_slice","value":"pub fn from_slice(&'a [u8]) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a bitmap object from a byte slice.","sig":null,"attributes":[{"value":"/ Creates a bitmap object from a byte slice.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5102,"byte_end":5148,"line_start":141,"line_end":141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5153,"byte_end":5156,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The created object keeps a shared reference to the input and does not dynamically allocate","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5161,"byte_end":5255,"line_start":143,"line_end":143,"column_start":5,"column_end":99}},{"value":"/ memory.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5260,"byte_end":5271,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5276,"byte_end":5279,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The color type must be explicitly specified when this method is called, for example by","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5284,"byte_end":5374,"line_start":146,"line_end":146,"column_start":5,"column_end":95}},{"value":"/ using the turbofish syntax. An error is returned if the bit depth of the specified color","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5379,"byte_end":5471,"line_start":147,"line_end":147,"column_start":5,"column_end":97}},{"value":"/ type doesn't match the bit depth of the BMP file.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5476,"byte_end":5529,"line_start":148,"line_end":148,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6418,"byte_end":6424,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"pixels","qualname":"<Bmp>::pixels","value":"pub fn pixels<'b>(&'b Self) -> Pixels","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels in this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels in this image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6352,"byte_end":6406,"line_start":169,"line_end":169,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6726,"byte_end":6732,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Bmp>::as_raw","value":"pub fn as_raw(&Self) -> &RawBmp","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the raw BMP image.","sig":null,"attributes":[{"value":"/ Returns a reference to the raw BMP image.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6516,"byte_end":6561,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6566,"byte_end":6569,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The [`RawBmp`] instance can be used to access lower level information about the BMP file.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6574,"byte_end":6667,"line_start":176,"line_end":176,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6672,"byte_end":6675,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`RawBmp`]: struct.RawBmp.html","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6680,"byte_end":6714,"line_start":178,"line_end":178,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7585,"byte_end":7591,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Header","qualname":"::ParseError::Header","value":"ParseError::Header","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":" An error occurred while parsing the header.\n","sig":null,"attributes":[{"value":"/ An error occurred while parsing the header.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7533,"byte_end":7580,"line_start":217,"line_end":217,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7666,"byte_end":7680,"line_start":221,"line_end":221,"column_start":5,"column_end":19},"name":"UnsupportedBpp","qualname":"::ParseError::UnsupportedBpp","value":"ParseError::UnsupportedBpp(u16)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":" The image uses a bit depth that isn't supported by tinybmp.\n","sig":null,"attributes":[{"value":"/ The image uses a bit depth that isn't supported by tinybmp.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7598,"byte_end":7661,"line_start":220,"line_end":220,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7760,"byte_end":7773,"line_start":224,"line_end":224,"column_start":5,"column_end":18},"name":"MismatchedBpp","qualname":"::ParseError::MismatchedBpp","value":"ParseError::MismatchedBpp(u16)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":" The image bit depth doesn't match the specified color type.\n","sig":null,"attributes":[{"value":"/ The image bit depth doesn't match the specified color type.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7692,"byte_end":7755,"line_start":223,"line_end":223,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7843,"byte_end":7870,"line_start":227,"line_end":227,"column_start":5,"column_end":32},"name":"UnsupportedDynamicBmpFormat","qualname":"::ParseError::UnsupportedDynamicBmpFormat","value":"ParseError::UnsupportedDynamicBmpFormat","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":" The image format isn't supported by `DynamicBmp`.\n","sig":null,"attributes":[{"value":"/ The image format isn't supported by `DynamicBmp`.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7785,"byte_end":7838,"line_start":226,"line_end":226,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7516,"byte_end":7526,"line_start":216,"line_end":216,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::ParseError","value":"pub enum ParseError {\n    Header,\n    UnsupportedBpp(u16),\n    MismatchedBpp(u16),\n    UnsupportedDynamicBmpFormat,\n}","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644}],"decl_id":null,"docs":" Parse error.\n","sig":null,"attributes":[{"value":"/ Parse error.","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7422,"byte_end":7438,"line_start":214,"line_end":214,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8850,"byte_end":8860,"line_start":32,"line_end":32,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10924,"byte_end":10934,"line_start":88,"line_end":88,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":11840,"byte_end":11850,"line_start":114,"line_end":114,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12955,"byte_end":12963,"line_start":40,"line_end":40,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13030,"byte_end":13033,"line_start":46,"line_end":46,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14311,"byte_end":14317,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17100,"byte_end":17112,"line_start":178,"line_end":178,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17801,"byte_end":17818,"line_start":210,"line_end":210,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18548,"byte_end":18554,"line_start":17,"line_end":17,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18733,"byte_end":18739,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19389,"byte_end":19395,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":22408,"byte_end":22417,"line_start":28,"line_end":28,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":22665,"byte_end":22674,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24860,"byte_end":24868,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5060,"byte_end":5063,"line_start":137,"line_end":137,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6814,"byte_end":6817,"line_start":184,"line_end":184,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7318,"byte_end":7321,"line_start":205,"line_end":205,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":8850,"byte_end":8860,"line_start":32,"line_end":32,"column_start":13,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":10924,"byte_end":10934,"line_start":88,"line_end":88,"column_start":27,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":233},"to":{"krate":5,"index":311}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\dynamic_bmp.rs","byte_start":11840,"byte_end":11850,"line_start":114,"line_end":114,"column_start":30,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":233},"to":{"krate":5,"index":291}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":12955,"byte_end":12963,"line_start":40,"line_end":40,"column_start":18,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":334},"to":{"krate":1,"index":2967}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":13030,"byte_end":13033,"line_start":46,"line_end":46,"column_start":6,"column_end":9},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":14311,"byte_end":14317,"line_start":99,"line_end":99,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17100,"byte_end":17112,"line_start":178,"line_end":178,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\header.rs","byte_start":17801,"byte_end":17818,"line_start":210,"line_end":210,"column_start":6,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18548,"byte_end":18554,"line_start":17,"line_end":17,"column_start":17,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\pixels.rs","byte_start":18733,"byte_end":18739,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":433},"to":{"krate":1,"index":7566}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_bmp.rs","byte_start":19389,"byte_end":19395,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":22408,"byte_end":22417,"line_start":28,"line_end":28,"column_start":14,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":22665,"byte_end":22674,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":521},"to":{"krate":1,"index":7566}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\raw_pixels.rs","byte_start":24860,"byte_end":24868,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":5060,"byte_end":5063,"line_start":137,"line_end":137,"column_start":13,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":6814,"byte_end":6817,"line_start":184,"line_end":184,"column_start":27,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":591},"to":{"krate":5,"index":311}},{"span":{"file_name":"C:\\Users\\Roger\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tinybmp-0.3.1\\src\\lib.rs","byte_start":7318,"byte_end":7321,"line_start":205,"line_end":205,"column_start":30,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":591},"to":{"krate":5,"index":291}}]}